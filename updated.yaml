kind: Deployment
apiVersion: apps/v1
metadata:
  name: model-deployment
  namespace: default
  uid: 63158714-e657-457e-870d-449382e4519f
  resourceVersion: '7579'
  generation: 3
  creationTimestamp: '2025-01-26T19:54:15Z'
  annotations:
    deployment.kubernetes.io/revision: '3'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"model-deployment","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"model"}},"template":{"metadata":{"labels":{"app":"model"}},"spec":{"containers":[{"image":"mlops01-m3-mlops01-m4-1","name":"mlops01-m4","ports":[{"containerPort":5000}]}]}}}}
  managedFields:
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: apps/v1
      time: '2025-01-26T19:54:15Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"mlops01-m4"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {Always}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
    - manager: dashboard
      operation: Update
      apiVersion: apps/v1
      time: '2025-01-26T20:09:02Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/restartedAt: {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2025-01-26T20:09:03Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:replicas: {}
          f:unavailableReplicas: {}
          f:updatedReplicas: {}
      subresource: status
spec:
  replicas: 2
  selector:
    matchLabels:
      app: model
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: model
      annotations:
        kubectl.kubernetes.io/restartedAt: '2025-01-26T20:09:02Z'
    spec:
      containers:
        - name: mlops01-m4
          image: mlops01-m3-mlops01-m4-1
          ports:
            - containerPort: 5000
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 3
  replicas: 3
  updatedReplicas: 1
  unavailableReplicas: 3
  conditions:
    - type: Available
      status: 'False'
      lastUpdateTime: '2025-01-26T19:54:15Z'
      lastTransitionTime: '2025-01-26T19:54:15Z'
      reason: MinimumReplicasUnavailable
      message: Deployment does not have minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2025-01-26T20:09:03Z'
      lastTransitionTime: '2025-01-26T20:08:37Z'
      reason: ReplicaSetUpdated
      message: ReplicaSet "model-deployment-89f67b675" is progressing.
